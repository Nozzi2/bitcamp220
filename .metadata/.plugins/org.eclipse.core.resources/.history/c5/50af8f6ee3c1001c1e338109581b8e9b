package constructor;

import java.util.Scanner;

public class MemberService_lect {
	private MemberDTO[] ar = new MemberDTO[5];
	
	public void menu() {
		Scanner scan = new Scanner(System.in);
		int input=0;
		
		while(true) {
			System.out.println();
			System.out.println("**************");
			System.out.println("   1. 가입");
			System.out.println("   2. 출력");
			System.out.println("   3. 수정");
			System.out.println("   4. 탈퇴");
			System.out.println("   5. 끝내기");
			System.out.println("**************");
			System.out.print("  번호 : ");
			
			input=scan.nextInt();
			scan.nextLine();
			
			if(input == 1) {
				insertMember();
			} else if(input == 2) {
				list();
			} else if(input == 3) {
				updateMember();
			} else if(input == 4) {
				deleteMember();
			} else if(input == 5) {
				break;
			}//if
		}//while
	}//menu()
	
	
	public void insertMember() {
		Scanner scan = new Scanner(System.in);
		
		//빈 배열 확인
		int i;
		int count=0;
		for(i=0; i<ar.length;i++) {
			if(ar[i]==null) count++;
		}
		if(count == 0) {
			System.out.println("정원초과");
			return;
		}
		
		/*
		for (MemberDTO i1: ar) { //ar에서 값만 던져준다. 
			if (i1 == null) { //값만 던졌기 때문에 true가 된다.
				System.out.print("이름 입력 : ");
				String name = scan.next();
				System.out.print("나이 입력 : ");
				int age = scan.nextInt();
				System.out.print("핸드폰 입력 : ");
				String phone = scan.next();
				System.out.print("주소 입력 : ");
				String address = scan.next();
				//값만 전달 받은 것이기 때문에 문제없이 수행되지만, 
				//비어있는 자리에 주솟값이 저장되는 것은 아니다.
				i1 = new MemberDTO(name, age, phone, address); 
				break;
			}
		}*/
		//ar에서 첫번쨰 값을 i1에게 넘겨준다. 
		//오직 '값'만 넘겨주는 것이기 때문에 ar 배열에게 생성자가 전달되지 않는다.  
		
		
		
		for(i=0; i<ar.length; i++) {
			if(ar[i] == null) {
				System.out.print("이름 입력 : ");
				String name = scan.next();
				System.out.print("나이 입력 : ");
				int age = scan.nextInt();
				System.out.print("핸드폰 입력 : ");
				String phone = scan.next();
				System.out.print("주소 입력 : ");
				String address = scan.next();
				
				//객체를 생성하고 Override된 생성자를 통해 인수를 전달하여 값을 저장함
				ar[i] = new MemberDTO(name,age,phone,address); 
				System.out.println("등록완료. "+(5-count+1)+"자리 남았습니다.");
				break;
			}//if
		}//for i
		
		
		
		
	}//insertMember()
	
	//총 5명중에서 등록된 회원만 보여준다
	public void list() {
		System.out.println();
		System.out.println("이름\t나이\t핸드폰\t\t주소");
		for(int i=0; i<ar.length;i++) {
			if(ar[i]!=null) {
				System.out.print(ar[i].getName()+"\t");
				System.out.print(ar[i].getAge()+"\t");
				System.out.print(ar[i].getPhone()+"\t");
				System.out.println(ar[i].getAddress());
			}//if
		}//for i

	}//list()
	
	/*
	→ 회원이 없을 때
	핸드폰 번호 입력 : 010-123-1234
	찾고자 하는 회원이 없습니다
	
	-------------------------------
	→ 회원이 있을 때
	핸드폰 번호 입력 : 010-123-1234
	
	이름      나이      핸드폰         주소
	홍길동   25      010-123-1234   서울
	
	수정 할 이름 입력 : 
	수정 할 나이 입력 :    
	수정 할 핸드폰 입력 : 
	수정 할 주소 입력 : 
	
	수정 완료
	 */
	public void updateMember() {
		Scanner scan = new Scanner(System.in);
		System.out.print("핸드폰 입력 : ");
		String phone = scan.next();
		
		int i;
		for(i=0; i<ar.length;i++) {
			if(ar[i].getPhone() == phone) break;
		}
		
		if(i==5) {
			System.out.println("찾고자 하는 회원이 없습니다.");
			return;
		}
		
		System.out.print("수정할 이름 입력 : ");
		ar[i].setName(scan.next());
		System.out.print("수정할 나이 입력 : ");
		ar[i].setAge(scan.nextInt());
		System.out.print("수정할 핸드폰 입력 : ");
		ar[i].setPhone(scan.next());
		System.out.print("수정할 주소 입력 : ");
		ar[i].setAddress(scan.next());
		
	}//updateMember()
	
	
	/*
	4번 삭제를 눌렀을 때 처리 - deleteMember()
	→ 회원이 없을 때
	핸드폰 번호 입력 : 010-123-1234
	찾고자 하는 회원이 없습니다
	
	-------------------------------
	→ 회원이 있을 때
	핸드폰 번호 입력 : 010-123-1234
	
	삭제 완료
	 */
	public void deleteMember() {

		
	} //deleteMember()
}



/*
1
노정환
37
010-2864-6425
인천 서구
*/